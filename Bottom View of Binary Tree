#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){
    vector<int> ans;
    queue<pair<BinaryTreeNode<int>*, int>> q; //node, level
    map<int, int> top; //level, value
    q.push({root, 0});
    while (!q.empty())
    {
        auto n = q.front();
        q.pop();

        auto node = n.first;
        int level = n.second;

        top[level] = node->data;

        if (node->left)
          q.push({node->left, level - 1});
        if (node->right)
          q.push({node->right, level + 1});
    }
    for (auto it: top)
    {
        ans.push_back(it.second);
    }
    return ans;
    // Write your code here.
    
}
