#include <bits/stdc++.h> 
vector<int> BFS(int v, vector<pair<int, int>> edges)
{
    vector<vector<int>> adj(v);
    for (auto it: edges)
    {
        adj[it.first].push_back(it.second);
        adj[it.second].push_back(it.first);
    }
    for (int i = 0; i < v; i++)
    {
        sort(adj[i].begin(), adj[i].end());
    }
    vector<int> ans, vis(v, 0);
    queue<int> q;
    for (int i = 0; i < v; i++){
        if (vis[i]) continue;
        q.push(i);
        vis[i] = 1;
        while (!q.empty())
        {
            int node = q.front();
            q.pop();
            ans.push_back(node);
            for (auto it: adj[node])
            {
                if (!vis[it]) {
                        q.push(it);
                        vis[it] = 1;
                    }
            }
        }
    }
    return ans;
    // Write your code here
}
