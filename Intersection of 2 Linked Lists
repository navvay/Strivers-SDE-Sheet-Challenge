/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
            int data;
            Node *next;
            Node()
            {
                this->data = 0;
                next = NULL;
            }
            Node(int data)
            {
                this->data = data;
                this->next = NULL;
            }
            Node(int data, Node* next)
            {
                this->data = data;
                this->next = next;
            }
        };

*****************************************************************/

Node* findIntersection(Node *firstHead, Node *secondHead)
{
    int len1 = 0, len2 = 0;
    Node *temp1 = firstHead, *temp2 = secondHead;
    while (temp1 && temp2)
    {
        len1++;
        len2++;
        temp1 = temp1->next;
        temp2 = temp2->next;
    } 
    while (temp1)
    {
        len1++;
        temp1 = temp1->next;
    }
    while (temp2)
    {
        len2++;
        temp2 = temp2->next;
    }
    int d = abs(len1 - len2);
    temp1 = firstHead;
    temp2 = secondHead;

    if (len1 > len2)
    {
        while (d--)
        {
            temp1 = temp1->next;
        }
    }
    if (len2 > len1)
    {
        while (d--)
        {
            temp2 = temp2->next;
        }
    }
    while (temp1 && temp2)
    {
        if (temp1 == temp2)
        return temp1;
        temp1 = temp1->next;
        temp2 = temp2->next;
    }
    return NULL;
    //Write your code here
}
