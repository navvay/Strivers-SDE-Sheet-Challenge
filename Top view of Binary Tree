#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {
    if (!root) return {};
    vector<int> ans;
    queue<pair<TreeNode<int>*, int>> q; //node, level
    map<int, int> top; //level, value
    q.push({root, 0});
    while (!q.empty())
    {
        auto n = q.front();
        q.pop();

        auto node = n.first;
        int level = n.second;

        if (top.find(level) == top.end()) 
        top[level] = node->val;

        if (node->left)
          q.push({node->left, level - 1});
        if (node->right)
          q.push({node->right, level + 1});
    }
    for (auto it: top)
    {
        ans.push_back(it.second);
    }
    return ans;
    // Write your code here.
}
