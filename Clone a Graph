#include <bits/stdc++.h> 
/***************************************************************************

	Class for graph node is as follows:

	class graphNode
	{
		public:
    		int data;
    	vector<graphNode *> neighbours;
    	graphNode()
    	{
        	data = 0;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val)
    	{
        	data = val;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val, vector<graphNode *> neighbours)
    	{
        	data = val;
        	this->neighbours = neighbours;
    	}
	};

******************************************************************************/
graphNode *dfs(graphNode* node, unordered_map<graphNode*, graphNode*> &mpp)
{
	vector<graphNode*> neighbours;
	graphNode* new_node = new graphNode(node->data);
	mpp[node] = new_node;
	for (auto it: node->neighbours)
	{
		if (mpp.find(it) != mpp.end())
		{
			neighbours.push_back(mpp[it]);
		}
		else
		{
			neighbours.push_back(dfs(it, mpp));
		}
	}
	new_node->neighbours = neighbours;
	return new_node;
}
graphNode *cloneGraph(graphNode *node)
{
	unordered_map<graphNode*, graphNode*> mpp;
	return dfs(node, mpp);
    // Write your code here.
}
