#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<vector<int>> ans;
    if (!root) return ans;
    vector<int> pre, In, post;
    stack<pair<BinaryTreeNode<int>*, int>> st;

    st.push({root, 1});

    while (!st.empty())
    {
        auto it = st.top();
        st.pop();

        BinaryTreeNode<int>* node = it.first;
        int pos = it.second;

        if (pos == 1) {
            pre.push_back(node->data);
            st.push({node, 2});
            if (node->left) st.push({node->left, 1});
        }

        else if (pos == 2) {
            In.push_back(node->data);
            st.push({node, 3});
            if (node->right) st.push({node->right, 1});
        }

        else {
            post.push_back(node->data);
        }
    }
    ans.push_back(In);
    ans.push_back(pre);
    ans.push_back(post);
    return ans;
    // Write your code here.
}
