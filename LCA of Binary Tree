#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

int lowestCommonAncestor(TreeNode<int> *root, int x, int y)
{
    if (!root) return -1;
    int r = root->data;
    if (r == x || r == y) return r;
    int left = lowestCommonAncestor(root->left, x, y);
    int right = lowestCommonAncestor(root->right, x, y);

    //no lca from both -> return -1

    if (left == -1 && right == -1) return -1;

    //no lca from right -> return left

    if (right == -1 && left != -1) return left;

    //no lca from left -> return right

    if (left == -1 && right != -1) return right;

    //lca from both -> return current node

    return r;

	//    Write your code here
}
