#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    if (!root) return {};
    vector<int> ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    int flag = 1;
    while (!q.empty())
    {
        int s = q.size();
        vector<int> row;
        for (int i = 0; i < s; i++) {
          auto node = q.front();
          q.pop();
          row.push_back(node->data);

          if (node->left)
            q.push(node->left);
          if (node->right)
            q.push(node->right);
        }
        if (!flag) reverse(row.begin(), row.end());
        for (int i = 0; i < s; i++)
        {
            ans.push_back(row[i]); 
        }
        flag = 1 - flag;
    }
    return ans;
    // Write your code here!
}
