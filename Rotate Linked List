/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     if (k == 0 || head->next == NULL) return head;
     int len = 1;
     Node *temp = head;
     while (temp->next)
     {
          len++;
          temp = temp->next;
     }

     k = k % len;

     int end = len - k;

     temp->next = head;

     temp = head;

     while (end-- > 1)
     {
          temp = temp->next;
     }

     head = temp->next;
     temp->next = NULL;

     return head;
     // Write your code here.
}
