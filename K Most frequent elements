vector<int> KMostFrequent(int n, int k, vector<int> &arr)
{
    unordered_map<int, int> mpp;
    for (auto it: arr) mpp[it]++;

    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

    for (auto it: mpp){
        if (!pq.empty() && it.second < pq.top().first) continue;
        pq.push({it.second, it.first});
        if (pq.size() > k) pq.pop();
    }

    vector<int> ans;
    while (!pq.empty())
    {
        ans.push_back(pq.top().second);
        pq.pop();
    }
    return ans;
    // Write your code here.
}
