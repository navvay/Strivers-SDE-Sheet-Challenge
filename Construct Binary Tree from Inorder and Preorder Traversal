#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int> *f(vector<int> &inorder, vector<int> &preorder, 
    unordered_map<int, int> &mpp, int is, int ie, int ps, int pe)
{
    if (is > ie || ps > pe) return NULL;

    TreeNode<int>* node = new TreeNode<int>(preorder[ps]);

    int leftlen = mpp[preorder[ps]];

    node->left = f(inorder, preorder, mpp, is, leftlen - 1, ps + 1, ps + leftlen - is);
    node->right = f(inorder, preorder, mpp, leftlen + 1, ie, ps + leftlen + 1 - is, pe);

    return node;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
    unordered_map<int, int> mpp;
    int n = preorder.size();

    for (int i = 0; i < n; i++)
    {
        mpp[inorder[i]] = i;
    }

    return f(inorder, preorder, mpp, 0, n-1, 0, n-1);
	//    Write your code here
}
