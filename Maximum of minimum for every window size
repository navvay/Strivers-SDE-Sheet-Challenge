#include <bits/stdc++.h> 
vector<int> prevSmall(vector<int> &arr, int n)
{
    vector<int> ans(n);
    stack<int> s;

    for (int i = 0; i < n; i++)
    {
        while (!s.empty() && arr[s.top()] >= arr[i]) s.pop();

        if (s.empty()) ans[i] = -1;
        else ans[i] = s.top();

        s.push(i);
    }
    return ans;
}

vector<int> nextSmall(vector<int> &arr, int n)
{
    vector<int> ans(n);
    stack<int> s;

    for (int i = n - 1; i >= 0; i--)
    {
        while (!s.empty() && arr[s.top()] >= arr[i]) s.pop();

        if (s.empty()) ans[i] = n;
        else ans[i] = s.top();

        s.push(i);
    }
    return ans;
}
vector<int> maxMinWindow(vector<int> a, int n) {
    // Write your code here.

    vector<int> ans(n, -1e9);

    vector<int> prev = prevSmall(a, n);
    vector<int> next = nextSmall(a, n);

    for (int i = 0; i < n; i++)
    {
        int length = next[i] - prev[i] - 1;
        ans[length - 1] = max(ans[length - 1], a[i]);
    }

    for (int i = n - 2; i >= 0; i--)
    {
        ans[i] = max(ans[i], ans[i + 1]);
    }
    return ans;
}
