#include <bits/stdc++.h> 
vector<int> kMaxSumCombination(vector<int> &a, vector<int> &b, int n, int k){
	priority_queue<pair<int, pair<int, int>>> pq;

	sort(a.begin(), a.end());
	sort(b.begin(), b.end());

	vector<int> ans;

	pq.push({a[n-1] + b[n-1], {n-1, n-1}});
	set<pair<int, int>> st;
	st.insert({n-1, n-1});
	while (ans.size() < k)
	{
		auto it = pq.top();
		pq.pop();
		int num = it.first;
		int i = it.second.first;
		int j = it.second.second;

		ans.push_back(num);
		if (i > 0 && st.find({i-1, j}) == st.end())
		{
			pq.push({a[i-1] + b[j], {i-1, j}});
			st.insert({i-1, j});
		}
		if (j > 0 && st.find({i, j-1}) == st.end())
		{
			pq.push({a[i] + b[j-1], {i, j-1}});
			st.insert({i, j-1});
		}
	}

	return ans;
	// Write your code here.
}
