#include<bits/stdc++.h>
int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
    int tot = 0, rot = 0, fresh = 0;
    queue<pair<int,int>> q;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            if (grid[i][j] == 2)
            {
                rot++;
                q.push({i, j});
            }
            else if (grid[i][j] == 1) fresh++;
        }
    }
    tot = rot + fresh;
    if (tot == 0) return 0;
    int t = 0;
    while (!q.empty())
    {
        t++;
        int s = q.size();
        for (int i = 0; i < s; i++)
        {
            auto it = q.front();
            q.pop();
            int x = it.first, y = it.second;
            int dx[] = {-1, 1, 0, 0};
            int dy[] = {0, 0, -1, 1};
            for (int k = 0; k < 4; k++)
            {
                int nx = x + dx[k], ny = y + dy[k];
                if (nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == 1)
                {
                    grid[nx][ny] = 2;
                    q.push({nx, ny});
                    rot++;
                    fresh--;
                }
            }
        }
    }
    if (tot == rot) return t - 1;
    return -1;
    // Write your code here. 
}
