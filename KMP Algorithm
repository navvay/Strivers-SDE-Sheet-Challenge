#include <bits/stdc++.h> 
void LPS(string &p, vector<int> &lps)
{
    int len = 0, ind = 1, m = p.size();

    while (ind < m)
    {
        if (p[ind] == p[len]){
            len++;
            lps[ind] = len;
            ind++;
        }
        else {
            if (len == 0){
                lps[ind] = 0;
                ind++;
            }
            else{
                len = lps[len - 1];
            }
        }
    }
}
bool findPattern(string p, string s)
{
    int m = p.size(), n = s.size();

    vector<int> lps(m, 0);
    LPS(p, lps);

    int ind1 = 0, ind2 = 0;
    while (ind1 < n)
    {
        if (s[ind1] == p[ind2]){
            ind2++;
            ind1++;
            if (ind2 == m) return true;

            if (ind1 == n) return false;
        }
        else{
            if (ind2 == 0) ind1++;
            else ind2 = lps[ind2 - 1];
        }
    }

    return false;
    // Write your code here.
}
