int singleNonDuplicate(vector<int>& arr)
{
	int n = arr.size()-1;
	if (arr.size() == 1) return arr[0];
	if (arr[0] != arr[1]) return arr[0];
	if (arr[n] != arr[n-1]) return arr[n];

	int l = 1, r = n-1, mid;

	while (l <= r)
	{
		mid = (l + r) / 2;

		if (arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]) return arr[mid];

		if ((mid%2 == 0 && arr[mid] == arr[mid+1]) || 
				(mid%2 == 1 && arr[mid] == arr[mid-1]))
			l = mid+1;
		
		else
			r = mid-1;
	}
	// Write your code here
}
