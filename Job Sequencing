#include<bits/stdc++.h>
bool static comp(vector<int> &a, vector<int> &b)
{
    return a[2] > b[2];
}
vector<int> jobScheduling(vector<vector<int>> &jobs)
{
    sort(jobs.begin(), jobs.end(), comp);

    int max_deadline = -1;

    for (auto it: jobs) max_deadline = max(max_deadline, it[1]);

    set<int, greater<int>> st;

    for (int i = 1; i <= max_deadline; i++)
    {
        st.insert(i);
    }

    int totalJobs = 0, totalProfit = 0;

    for (auto it: jobs)
    {
        if (st.size() == 0 || it[1] < *st.rbegin()) continue;
        
        int available = *st.lower_bound(it[1]);
        totalJobs++;
        totalProfit += it[2];
        st.erase(available);
    }
    return {totalJobs, totalProfit};
    // Write your code here
}
